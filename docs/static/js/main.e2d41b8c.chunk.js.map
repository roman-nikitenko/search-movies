{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","API_URL","getMovie","query","a","fetch","response","json","FindMovie","addMove","useState","searchInput","setSearchInput","errorMessage","setErrorMessage","setMovie","disabledButton","setDisabledButton","load","setLoad","fetchMovie","newMovie","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","e","target","classNames","disabled","onClick","App","setMovies","mov","find","ReactDOM","render","document","getElementById"],"mappings":"yTAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BC3BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,+CCdbC,EAAU,2CAET,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,eAAAC,EAAA,sEACkBC,MAAM,GAAD,OAAIJ,EAAJ,cAAiBE,IADxC,cACCG,EADD,yBAGEA,EAASC,QAHX,4C,sBCSA,IAAMC,EAA6B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3C,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA0BJ,mBAAuB,MAAjD,mBAAOtB,EAAP,KAAc2B,EAAd,KACA,EAA4CL,oBAAS,GAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAAwBP,oBAAS,GAAjC,mBAAOQ,EAAP,KAAaC,EAAb,KAIMC,EAAU,uCAAG,4BAAAhB,EAAA,sEACMF,EAASS,GADf,OAGS,WAFpBU,EADW,QAGJC,UACXR,GAAgB,GAChBC,EAAS,MACTI,GAAQ,KAERL,GAAgB,GAChBK,GAAQ,GAERJ,EAAS,CACPtB,MAAO4B,EAASE,MAChB7B,YAAa2B,EAASG,KACtBjC,OAA4B,QAApB8B,EAASI,OAhBJ,4DAgBoCJ,EAASI,OAC1D7B,QAAQ,8BAAD,OAAgCyB,EAASK,QAChD1B,OAAQqB,EAASK,UAhBJ,2CAAH,qDAqChB,OACE,qCACE,uBACErC,UAAU,aACVsC,SAde,SAACC,GACpBA,EAAMC,iBACDlB,IAILQ,GAAQ,GACRC,MAKE,UAIE,sBAAK/B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQyC,QAAQ,cAAjC,yBAIA,qBAAKzC,UAAU,UAAf,SACE,uBACE,UAAQ,aACR0C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ5C,UAAU,kBACV6C,MAAOvB,EACPwB,SAAU,SAACC,GACTxB,EAAewB,EAAEC,OAAOH,OACxBjB,EAAqC,KAAnBmB,EAAEC,OAAOH,OAC3BpB,GAAgB,QAKrBD,GACC,mBAAGxB,UAAU,iBAAiB,UAAQ,eAAtC,qDAOJ,sBAAKA,UAAU,8BAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR0C,KAAK,SACL1C,UAAWiD,IAAW,kBACpBpB,EAAO,GAAK,cACdqB,SAAUvB,EALZ,4BAWF,qBAAK3B,UAAU,UAAf,SACa,OAAVD,GACC,wBACE,UAAQ,YACR2C,KAAK,SACL1C,UAAU,oBACVmD,QAAS,WACP/B,EAAQrB,GAtEtB2B,EAAS,MACTE,GAAkB,GAClBL,EAAe,KA+DL,qCAeG,OAAVxB,GACC,sBAAKC,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOA,WCvHfqD,G,MAAM,WACjB,MAA4B/B,mBAAkB,IAA9C,mBAAOZ,EAAP,KAAe4C,EAAf,KAUA,OACE,sBAAKrD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWoB,QAfD,SAACkC,IACF7C,EAAO8C,MAAK,SAAAxD,GAAK,OAAIA,EAAMY,SAAW2C,EAAI3C,WAGrD0C,EAAU,GAAD,mBAAK5C,GAAL,CAAa6C,eCT5BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e2d41b8c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","const API_URL = 'https://www.omdbapi.com/?apikey=3c7a52de';\n\nexport async function getMovie(query: string) {\n  const response = await fetch(`${API_URL}&t=${query}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  addMove: (mov: Movie) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMove }) => {\n  const [searchInput, setSearchInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [disabledButton, setDisabledButton] = useState(true);\n  const [load, setLoad] = useState(true);\n  // eslint-disable-next-line max-len\n  const defaultImg = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  const fetchMovie = async () => {\n    const newMovie = await getMovie(searchInput);\n\n    if (newMovie.Response === 'False') {\n      setErrorMessage(true);\n      setMovie(null);\n      setLoad(true);\n    } else {\n      setErrorMessage(false);\n      setLoad(true);\n\n      setMovie({\n        title: newMovie.Title,\n        description: newMovie.Plot,\n        imgUrl: newMovie.Poster === 'N/A' ? defaultImg : newMovie.Poster,\n        imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n        imdbId: newMovie.imdbID,\n      });\n    }\n  };\n\n  const resetSets = () => {\n    setMovie(null);\n    setDisabledButton(true);\n    setSearchInput('');\n  };\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n    if (!searchInput) {\n      return;\n    }\n\n    setLoad(false);\n    fetchMovie();\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchInput}\n              onChange={(e) => {\n                setSearchInput(e.target.value);\n                setDisabledButton(e.target.value === '');\n                setErrorMessage(false);\n              }}\n            />\n          </div>\n\n          {errorMessage && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped is-loading\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames('button is-light',\n                load ? '' : 'is-loading')}\n              disabled={disabledButton}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie !== null && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addMove(movie);\n                  resetSets();\n                }}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n      {movie !== null && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMove = (mov: Movie): void => {\n    const res = !movies.find(movie => movie.imdbId === mov.imdbId);\n\n    if (res) {\n      setMovies([...movies, mov]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMove={addMove} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}